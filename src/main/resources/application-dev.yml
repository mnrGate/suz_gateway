spring:
  application:
    name: SuzGatewayService
  sleuth:
    sampler:
      probability: 1.0
    zipkin:
      enabled: false
  security:
    permit-all-uris: ${PERMIT_ALL_URIS:/actuator/**,/metrics/**,/realms/RandomUsers/**,/auth/**,/resources/**,/swagger/**,/api-docs/**,/api/v1/keycloak/**}


    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${ISSUER_URI:http://localhost:8081/realms/RandomUsers}
          jwk-set-uri: ${JWK_SET_URI:http://localhost:8081/realms/RandomUsers/protocol/openid-connect/certs}

  cloud:
    gateway:
      httpclient:
        wiretap: true
      httpserver:
        wiretap: true
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
      globalcors:
        corsConfigurations:
          '[/api/**]':
            allowedOrigins: ${ALLOWED_ORIGINS:http://localhost:4173}
            allowedMethods:
              - GET
              - POST
              - PATCH
              - PUT
              - DELETE
            allowedHeaders: "*"
            allowCredentials: true
      routes:
        # Маршрут для  Keycloak (без авторизации)
        - id: keycloak_services
          uri: ${KEYCLOAK_URL:http://localhost:8081}
          predicates:
            - Path=/realms/RandomUsers/**,/auth/**,/resources/**
          filters:
            - PreserveHostHeader
            - AddResponseHeader=X-Frame-Options,ALLOWALL

        # Маршрут Swagger и API документации keycloak-userdata-service (без авторизации)
        - id: keycloak_userdata_service_swagger
          uri: http://localhost:8083
          predicates:
            - Path=/swagger/userdata/**,/api-docs/userdata/**
          filters:
            - RewritePath=/swagger/userdata/(?<segment>.*), /swagger-ui/$\{segment}
            - PreserveHostHeader

        # Маршрут Swagger и API документации jcr-repository-service (без авторизации)
        - id: jcr_repository_service_swagger
          uri: http://jcr-repository-service:8080
          predicates:
            - Path=/swagger/jcr/**,/api-docs/jcr/**
          filters:
            - RewritePath=/swagger/jcr/(?<segment>.*), /swagger-ui/$\{segment}
            - PreserveHostHeader

        # Маршрут API keycloak-userdata-service (с авторизацией)
        - id: keycloak_userdata_service_api
          uri: http://localhost:8083
          predicates:
            - Path=/api/v1/keycloak/**
          filters:
            - PreserveHostHeader
            - TokenForwardingFilter

        # Маршрут API jcr-repository-service (с авторизацией)
        - id: jcr_repository_service_api
          uri: http://jcr-repository-service:8080
          predicates:
            - Path=/api/v1/page-nodes/**,/api/v1/nodes/**,/api/v1/workspaces/**
          filters:
            - PreserveHostHeader
            - TokenForwardingFilter

management:
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    export:
      prometheus:
        enabled: true
  endpoint:
    prometheus:
      enabled: true
  server:
    port: 8080


logbook:
  write:
    level: DEBUG
  include:
    paths: ["/api/v1/keycloak/**"]


logging:
  level:
    root: INFO
    org.springframework.security: DEBUG
    org.springframework.web.cors: DEBUG
    org.springframework.cloud.gateway: DEBUG
    org.zalando.logbook: DEBUG
    ru.loodsen.syz_gateway.filters: DEBUG
  pattern:
    console: "%d{HH:mm:ss.SSS} %-5level [traceId=%X{traceId}] %logger{16} - %msg%n%ex{full}"
